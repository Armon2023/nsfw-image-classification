package net.cnki.bdap.apps.prs.controller;

import net.cnki.bdap.apps.prs.business.service.PerformanceResultService;
import net.cnki.bdap.apps.prs.common.PRSCommonConstant;
import net.cnki.bdap.apps.prs.persistence.bean.SystemUser;
import net.cnki.bdap.cache.base.BdapCache;
import net.cnki.bdap.cache.factory.BdapCacheFactory;
import net.cnki.bdap.frame.persistence.system.bean.BdapSystem;
import net.cnki.bdap.service.factory.BdapServiceFactory;
import net.cnki.bdap.web.base.BaseController;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import java.io.BufferedReader;
import java.io.IOException;

/**
 * The PRS(performace reprot system) report page.
 *
 * @author william
 * @version 2019.5.27 10:06
 * @since jdk1.8.0_144
 */
@Controller
public class PrsReportController extends BaseController<BdapSystem> {

    /** prs路径。 */
    private String PRS = "prs";
    private String SUBJECT_ID = "prs.report";

    @Override
    public String getSubjectId() {
        return SUBJECT_ID;
    }

    @Override
    public ModelAndView initOpen() {
        return null;
    }

    /**
     * 获取功耗信息并保存.
     *
     * @return java.lang.String
     */
    @ResponseBody
    @RequestMapping(value = "/zhiceyun/sync_ss/upSendResult_Power", method = RequestMethod.POST, produces = {"application/json;charset=UTF-8"})
    public String getPowerInfos() {
        BufferedReader br;
        StringBuilder sb = new StringBuilder();
        try {
            br = request.getReader();

            String temp;
            while ((temp = br.readLine()) != null) {
                sb.append(temp);
            }
            br.close();
            System.out.print(sb.toString());
        } catch (IOException e) {
            e.printStackTrace();
        }

        PerformanceResultService performanceResultService = BdapServiceFactory.instance().getService(PerformanceResultService.class);
        String message = performanceResultService.upSendResultPower(sb.toString());
        return message;
    }

    /**
     * 展示详情。
     *
     * @param id PerformanceResult id.
     *
     * @return org.springframework.web.servlet.ModelAndView
     */
    @ResponseBody
    @RequestMapping(value = "/showPowerInfos", method = RequestMethod.GET, produces = {"application/json;charset=UTF-8"})
    public ModelAndView showPowerInfos(@ModelAttribute("id") String id) {
        ModelAndView view = new ModelAndView();

        BdapCache<SystemUser> userCache = BdapCacheFactory.instance().getCacheHandler();
        SystemUser sysUser = userCache.get(PRSCommonConstant.KMIS_CACHE_CURRENT_USER, this.getToken());
        view.addObject("user", sysUser);
        String forwardPage = PRS + "/info";
        PerformanceResultService performanceResultService = BdapServiceFactory.instance().getService(PerformanceResultService.class);
        String powerInfos = performanceResultService.findById(id);
        view.addObject("powerInfos", powerInfos);
        view.setViewName(forwardPage);
        return view;
    }

}
